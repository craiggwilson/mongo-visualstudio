<UserControl x:Class="MongoDB.VisualStudio.Explorer.ExplorerTree"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:explorer="clr-namespace:MongoDB.VisualStudio.Explorer"
             xmlns:explorerModels="clr-namespace:MongoDB.VisualStudio.Explorer.ViewModels"
             Background="{DynamicResource VsBrush.Window}"
             Foreground="{DynamicResource VsBrush.WindowText}">
    <UserControl.Resources>
        <explorer:ThicknessIndentationValueConverter x:Key="ThicknessIndenter" />
        <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="TreeViewItem">
            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}" />
            <EventSetter Event="MouseRightButtonUp" Handler="OnItemMouseRightButtonUp" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="TreeViewItem">
                        <StackPanel>
                            <Border x:Name="Bd"
                                HorizontalAlignment="Stretch"
                                Background="{TemplateBinding Panel.Background}"
                                BorderBrush="{TemplateBinding Border.BorderBrush}"
                                BorderThickness="{TemplateBinding Border.BorderThickness}"
                                SnapsToDevicePixels="True">
                                <Border.Padding>
                                    <MultiBinding Converter="{StaticResource ThicknessIndenter}" ConverterParameter="16">
                                        <Binding Path="Padding" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="Depth" />
                                    </MultiBinding>
                                </Border.Padding>
                                <StackPanel Orientation="Horizontal">
                                    <ToggleButton Name="Expander" 
                                        ClickMode="Press" 
                                        IsChecked="{Binding Path=IsExpanded, RelativeSource={RelativeSource TemplatedParent}}">
                                        <ToggleButton.Style>
                                            <Style TargetType="ToggleButton">
                                                <Setter Property="UIElement.Focusable" Value="false" />
                                                <Setter Property="FrameworkElement.Width" Value="16" />
                                                <Setter Property="FrameworkElement.Height" Value="16" />
                                                <Setter Property="Control.Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="ToggleButton">
                                                            <Border Width="16" Height="16" Background="#00FFFFFF" Padding="5,5,5,5">
                                                                <Path Name="ExpandPath" Fill="#00FFFFFF" Stroke="#FF989898">
                                                                    <Path.Data>
                                                                        <PathGeometry Figures="M0,0L0,6L6,0z" />
                                                                    </Path.Data>
                                                                    <Path.RenderTransform>
                                                                        <RotateTransform Angle="135" CenterX="3" CenterY="3" />
                                                                    </Path.RenderTransform>
                                                                </Path>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="UIElement.IsMouseOver" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF1BBBFA" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#00FFFFFF" />
                                                                </Trigger>
                                                                <Trigger Property="ToggleButton.IsChecked" Value="True">
                                                                    <Setter TargetName="ExpandPath" Property="UIElement.RenderTransform">
                                                                        <Setter.Value>
                                                                            <RotateTransform Angle="180" CenterX="3" CenterY="3" />
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Fill" Value="#FF595959" />
                                                                    <Setter TargetName="ExpandPath" Property="Shape.Stroke" Value="#FF262626" />
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>
                                        </ToggleButton.Style>
                                    </ToggleButton>
                                    <ContentPresenter x:Name="PART_Header"
                                                                  HorizontalAlignment="{TemplateBinding Control.HorizontalContentAlignment}"
                                                                  Content="{TemplateBinding HeaderedContentControl.Header}"
                                                                  ContentSource="Header"
                                                                  ContentStringFormat="{TemplateBinding HeaderedItemsControl.HeaderStringFormat}"
                                                                  ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"
                                                                  ContentTemplateSelector="{TemplateBinding HeaderedItemsControl.HeaderTemplateSelector}"
                                                                  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                                </StackPanel>
                            </Border>
                            <ItemsPresenter x:Name="ItemsHost" />
                        </StackPanel>
                        <ControlTemplate.Triggers>
                            <Trigger Property="TreeViewItem.IsExpanded" Value="False">
                                <Setter TargetName="ItemsHost" Property="UIElement.Visibility" Value="Collapsed" />
                            </Trigger>
                            <Trigger Property="ItemsControl.HasItems" Value="False">
                                <Setter TargetName="Expander" Property="UIElement.Visibility" Value="Hidden" />
                            </Trigger>
                            <Trigger Property="TreeViewItem.IsSelected" Value="True">
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.HighlightTextBrushKey}}" />
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="TreeViewItem.IsSelected" Value="True" />
                                    <Condition Property="Selector.IsSelectionActive" Value="False" />
                                </MultiTrigger.Conditions>
                                <Setter TargetName="Bd" Property="Panel.Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
                            </MultiTrigger>
                            <Trigger Property="UIElement.IsEnabled" Value="False">
                                <Setter Property="TextElement.Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>
    <TreeView ItemsSource="{Binding Children}">
        <TreeView.Resources>
            <HierarchicalDataTemplate 
                DataType="{x:Type explorerModels:ExpandableNodeViewModel}" 
                ItemsSource="{Binding Children}">
                <StackPanel Orientation="Horizontal">
                    <Image Name="image" Source="{Binding Image}" Height="16" Width="16" />
                    <TextBlock Text="{Binding Text}" />
                </StackPanel>
                <HierarchicalDataTemplate.Triggers>
                    <DataTrigger Binding="{Binding IsExpanded}" Value="True">
                        <Setter TargetName="image" Property="Source" Value="{Binding ExpandedImage}" />
                    </DataTrigger>
                </HierarchicalDataTemplate.Triggers>
            </HierarchicalDataTemplate>

            <DataTemplate 
                DataType="{x:Type explorerModels:NodeViewModel}">
                <StackPanel Orientation="Horizontal">
                    <Image Source="{Binding Image}" Height="16" Width="16" />
                    <TextBlock Text="{Binding Text}" />
                </StackPanel>
            </DataTemplate>
        </TreeView.Resources>
    </TreeView>
</UserControl>